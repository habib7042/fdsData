// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL") // Optional: for migrations
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      UserRole @default(MEMBER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  member    Member?
  payments  Payment[]
  
  @@map("users")
}

model Member {
  id              String   @id @default(cuid())
  name            String
  email           String   @unique
  phone           String?
  address         String?
  monthlyAmount   Float    @default(0)
  totalPaid       Float    @default(0)
  totalDue        Float    @default(0)
  isActive        Boolean  @default(true)
  joinDate        DateTime @default(now())
  
  // Relations
  userId          String?  @unique
  user            User?    @relation(fields: [userId], references: [id])
  payments        Payment[]
  
  @@map("members")
}

model Payment {
  id              String        @id @default(cuid())
  amount          Float
  paymentMethod   PaymentMethod
  transactionId   String?
  notes           String?
  status          PaymentStatus @default(PENDING)
  submittedAt     DateTime      @default(now())
  verifiedAt      DateTime?
  verifiedBy      String?
  
  // Relations
  memberId        String
  member          Member        @relation(fields: [memberId], references: [id])
  submittedBy     String
  submitter       User          @relation(fields: [submittedBy], references: [id])
  
  @@map("payments")
}

enum UserRole {
  ACCOUNTANT
  MEMBER
}

enum PaymentMethod {
  BKASH
  NAGAD
  CASH
}

enum PaymentStatus {
  PENDING
  APPROVED
  REJECTED
}